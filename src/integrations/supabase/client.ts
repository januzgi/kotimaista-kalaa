// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://tjpqdldvrknwaybryzba.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InRqcHFkbGR2cmtud2F5YnJ5emJhIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTY5Nzk4NTgsImV4cCI6MjA3MjU1NTg1OH0.OYLkzx93pB3dHsVOG76ADQRBLfp9BblaZ-sUqhZjPcY";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

/**
 * Supabase client instance configured for the Kotimaistakalaa application.
 * 
 * This client provides access to:
 * - Authentication (Google OAuth, email/password)
 * - Database operations (CRUD operations on all tables)
 * - Real-time subscriptions
 * - Storage for file uploads
 * - Edge functions for business logic
 * 
 * Configuration:
 * - Uses localStorage for auth token persistence
 * - Automatically refreshes auth tokens
 * - Maintains session across browser sessions
 * 
 * @example
 * ```tsx
 * // Query data
 * const { data, error } = await supabase
 *   .from('products')
 *   .select('*')
 *   .eq('fisherman_id', userId);
 * 
 * // Listen to real-time changes
 * supabase
 *   .channel('order_changes')
 *   .on('postgres_changes', { 
 *     event: 'INSERT', 
 *     schema: 'public', 
 *     table: 'orders' 
 *   }, handleNewOrder)
 *   .subscribe();
 * ```
 */
export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    storage: localStorage,
    persistSession: true,
    autoRefreshToken: true,
  }
});